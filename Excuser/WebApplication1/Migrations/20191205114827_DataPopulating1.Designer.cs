// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.DbContext;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ExcuserContex))]
    [Migration("20191205114827_DataPopulating1")]
    partial class DataPopulating1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Work"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Events"
                        },
                        new
                        {
                            Id = 3,
                            Name = "School"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Friends"
                        });
                });

            modelBuilder.Entity("Repository.Model.Excuse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body");

                    b.Property<int>("SubcategoryId");

                    b.Property<int>("Tone");

                    b.HasKey("Id");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Excuse");
                });

            modelBuilder.Entity("Repository.Model.ExcuseKeyword", b =>
                {
                    b.Property<int>("ExcuseId");

                    b.Property<int>("KeywordId");

                    b.HasKey("ExcuseId", "KeywordId");

                    b.HasIndex("KeywordId");

                    b.ToTable("ExcuseKeyword");
                });

            modelBuilder.Entity("Repository.Model.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Keyword");
                });

            modelBuilder.Entity("Repository.Model.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 4,
                            Name = "Late for meetup"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            Name = "Not attending party"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            Name = "Not coming over "
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Name = "Doublebooking "
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Name = "Not feeling like it "
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            Name = "Physical "
                        });
                });

            modelBuilder.Entity("Repository.Model.Excuse", b =>
                {
                    b.HasOne("Repository.Model.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Repository.Model.ExcuseKeyword", b =>
                {
                    b.HasOne("Repository.Model.Excuse", "Excuse")
                        .WithMany("ExcuseKeywords")
                        .HasForeignKey("ExcuseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Repository.Model.Keyword", "Keyword")
                        .WithMany("ExcuseKeywords")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Repository.Model.Subcategory", b =>
                {
                    b.HasOne("Repository.Model.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
